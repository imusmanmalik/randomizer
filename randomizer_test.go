/*
#
# Copyright Usman Malik - https://github.com/imusmanmalik
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
*/

package randomizer

import (
	"testing"
)

func TestGenerateRandomInt(t *testing.T) {
	// Generate a random integer between 1 and 100
	randomInt, err := RandomInt(1, 100)
	if err != nil {
		t.Errorf("Error generating random integer: %v", err)
	}

	// Check that the generated integer is within the range
	if randomInt < 1 || randomInt > 100 {
		t.Errorf("Generated integer %v is not within the specified range", randomInt)
	}
}

func TestGenerateRandomBytes(t *testing.T) {
	// Generate a random byte slice with length 16
	randomBytes, err := RandomBytes(16)
	if err != nil {
		t.Errorf("Error generating random bytes: %v", err)
	}

	// Check that the length of the generated byte slice is correct
	if len(randomBytes) != 16 {
		t.Errorf("Generated byte slice has incorrect length: expected 16, got %v", len(randomBytes))
	}
}

func TestGenerateRandomString(t *testing.T) {
	// Generate a random string with length 32
	randomString, err := RandomString(32)
	if err != nil {
		t.Errorf("Error generating random string: %v", err)
	}

	// Check that the length of the generated string is correct
	if len(randomString) != 32 {
		t.Errorf("Generated string has incorrect length: expected 32, got %v", len(randomString))
	}
}
